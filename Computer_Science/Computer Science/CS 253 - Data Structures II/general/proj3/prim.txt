int[n][n] adj;
int[n] out, key;
int[n * n] qv, qw;
int tail;
sub InsertQueue(int v, int w);
	qv[tail] = v; qw[tail] = w;
	tail = tail + 1;
end;
sub GetQueue() int;
	int x, minIndex, minValue;
	minValue = INFINITY;
	for x = 0, x < tail;
		if qw[x] < minValue;
			minValue = queue[x];
			minIndex = x;
		end;
	end;
	tail = tail - 1;
	qv[minIndex] = qv[tail]; qw[minIndex] = qw[tail]
	return minValue;
end;
sub Find(int v) int;
	int x;
	for x = 0, x < tail;
		if qv[x] == v;
			return 1;
		end;
	end;
	return 0;
end;
sub Prim();
	int x, y, u;
	for x = 0, x < n;
		key[x] = INFINITY;
		out[x] = -1;
	end;
	key[0] = 0; tail = 0;
	for y = 0, y < n;
		for x = 0, x < n;
			if adj[y][x] != INFINITY;
				InsertQueue(y, adj[y][x]);
			end;
		end;
		while tail > 0;
			u = GetQueue();
			for x = 0, x < n;
				if Find(x) and adj[u][x] < key[x];
					out[x] = u;
					key[x] = adj[u][x];
				end;
			end;
		end;
	end;
end;

