                          CS 284 Operating Systems
                          Programming Assignment #5

                         Shell Scripting with Bourne

Due: 10/16/2003 - Class Time
=========================================================================
REQUIRED READING: Wang Chapter 7, 5, and 6.
                  Also read online UNIX manual pages for the following:
                  bash, mv, rm, mkdir, tr, sed, awk, expr, test
=========================================================================

For this Project there are two separate programs.  These programs are shell
scripts.  Remember, these are NOT C programs.  Also note, that there is a huge
variety of ways to do the same task.

Part I
=========

Write a Bourne shell script (/bin/sh) that meets the following specification:

    1.  This program should take two arguments.  If there is not two arguments
        then the program should print out how to use the script and exit with
        a -1.  These arguments are:

            A.  File1 - the name of a source file
            B.  File2 - the name of a destination file
    
    2.  Check for the existence of File1 and File2.  If either file does not
        exist, then the program should state which file doesn't exist and exit
        with a -2.

    3.  Swap the contents of the two files.  This can be done a huge variety
        of ways.

    4.  Open an editor to edit the new File2.

    5.  If the editor exits successfully, then the script should also.

PART II
=========

A lot of people have archieves of files that contain spaces.  Some of these
people do not like those spaces in the filenames.  We need to write a script
that will fix this problem by replacing all spaces with underscores. 

Write a Bourne shell script (/bin/sh) that meets the following specification:

    1.  This program takes zero or one argument:

        If the argument is "-h", then the script should print how to use the
        program and exit with a -1.

        If there are more than one argument then the usage of the program
        should be printed and exit with a -1.

    2.  Starting with the current directory (./), the script should process
        each file and directory as follows:

        A.  If the item being processed is a file, then replace all of the
            spaces in the filename with an underscore.

        B.  If the item being processed is a directory, replace all of the
            spaces in the directory name with an underscore and then start
            step two over in that directory.

    3.  exit
                
=====================================================================
IMPORTANT NOTE:
In order to get your scripts to work on any UMR UNIX workstation, you need
to include the following statement as the first line in your script:

#!/umr/testbin/bash

=====================================================================
ADDITIONAL NOTES
=====================================================================

(1) Please Use the 'script' command to capture all necessary 
    information for handin as described in the previous assignment.

(2) After you have generated the 'script' file, remove ^M (cntl-M)s 
    from your script file, and then edit it by adding a comment to
    each line generated by the system(...) call noting what each of
    the processes corresponds to in terms of your program.

(3) Also store your source files, script file (myhandin#), and the
    executable file, in the directory:  ~cs284/YourLoginName/proj#/
    where # = Assignment number

=================================================================
EXAMPLE INPUT  (You're script should handle these)
=================================================================

Prog1:

prog5a.sh File1 Directory1  -> Error, arguments must be files
prog5a.sh File1 ->  Error, must have two arguments
prog5a.sh File1 File2 -> Success.


Prog2:

prog5b.sh File1 File2 File3 Dir1 ->  Success
prog5b.sh ->  Error, must have one argument.



==================================================================
EXAMPLE OUTPUT
==================================================================
Due to the vast number of different outputs, only a model can be supplied.
This model will be mailed to the listserve soon.